import os
import xml.etree.ElementTree as ET
from difflib import unified_diff
import pandas as pd

# Set your folder paths
release_dir = "/path/to/release_folder"
local_dir = "/path/to/local_folder"

results = []

def extract_name_if_formatter(xml_path):
    try:
        tree = ET.parse(xml_path)
        root = tree.getroot()
        component = root.find(".//ObjectType")
        if component is not None and "Import/Export Format" in component.attrib.get("ComponentName", ""):
            name_tag = root.find(".//Row/Name")
            return name_tag.text.strip() if name_tag is not None else None
    except:
        return None
    return None

def compare_xmls(local_path, release_path):
    with open(local_path, 'r', encoding='utf-8') as f1, open(release_path, 'r', encoding='utf-8') as f2:
        local_lines = f1.readlines()
        release_lines = f2.readlines()
        return list(unified_diff(local_lines, release_lines, fromfile='local', tofile='release'))

# Traverse release folder recursively
for root, _, files in os.walk(release_dir):
    for file in files:
        if file.endswith(".xml"):
            release_xml_path = os.path.join(root, file)
            name = extract_name_if_formatter(release_xml_path)

            if name:
                local_xml_path = os.path.join(local_dir, f"{name}.xml")

                if os.path.exists(local_xml_path):
                    # Compare line-by-line
                    diffs = compare_xmls(local_xml_path, release_xml_path)
                    if diffs:
                        for line in diffs:
                            results.append({
                                "Formatter Name": name,
                                "Release XML Path": release_xml_path,
                                "Status": "Changed",
                                "Change": line.strip()
                            })
                else:
                    # Local copy missing
                    results.append({
                        "Formatter Name": name,
                        "Release XML Path": release_xml_path,
                        "Status": "Missing in Local",
                        "Change": "N/A"
                    })

# Export to Excel
df = pd.DataFrame(results)
output_path = "formatter_release_diff_summary.xlsx"
df.to_excel(output_path, index=False)
print(f"âœ… Final Excel saved at: {output_path}")